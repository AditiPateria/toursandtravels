{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080'; // Base URL for Spring Boot backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  let errorMessage = 'An unexpected error occurred';\n  if (error.response) {\n    var _error$response$data;\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.response.data || errorMessage;\n    console.error('Server Error:', error.response.status, error.response.data);\n  } else if (error.request) {\n    // The request was made but no response was received\n    errorMessage = 'No response from server. Please check if the server is running.';\n    console.error('Network Error:', error.request);\n  } else {\n    // Something happened in setting up the request\n    errorMessage = error.message;\n    console.error('Request Error:', error.message);\n  }\n  error.message = errorMessage;\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","errorMessage","_error$response$data","data","message","console","status"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080'; // Base URL for Spring Boot backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Add request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    let errorMessage = 'An unexpected error occurred';\n    \n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      errorMessage = error.response.data?.message || error.response.data || errorMessage;\n      console.error('Server Error:', error.response.status, error.response.data);\n    } else if (error.request) {\n      // The request was made but no response was received\n      errorMessage = 'No response from server. Please check if the server is running.';\n      console.error('Network Error:', error.request);\n    } else {\n      // Something happened in setting up the request\n      errorMessage = error.message;\n      console.error('Request Error:', error.message);\n    }\n\n    error.message = errorMessage;\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,IAAII,YAAY,GAAG,8BAA8B;EAEjD,IAAIJ,KAAK,CAACG,QAAQ,EAAE;IAAA,IAAAE,oBAAA;IAClB;IACA;IACAD,YAAY,GAAG,EAAAC,oBAAA,GAAAL,KAAK,CAACG,QAAQ,CAACG,IAAI,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBE,OAAO,KAAIP,KAAK,CAACG,QAAQ,CAACG,IAAI,IAAIF,YAAY;IAClFI,OAAO,CAACR,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,QAAQ,CAACM,MAAM,EAAET,KAAK,CAACG,QAAQ,CAACG,IAAI,CAAC;EAC5E,CAAC,MAAM,IAAIN,KAAK,CAACP,OAAO,EAAE;IACxB;IACAW,YAAY,GAAG,iEAAiE;IAChFI,OAAO,CAACR,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACP,OAAO,CAAC;EAChD,CAAC,MAAM;IACL;IACAW,YAAY,GAAGJ,KAAK,CAACO,OAAO;IAC5BC,OAAO,CAACR,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACO,OAAO,CAAC;EAChD;EAEAP,KAAK,CAACO,OAAO,GAAGH,YAAY;EAC5B,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}