{"ast":null,"code":"import api from './api';\nexport const getBookings = async () => {\n  try {\n    const response = await api.get('/api/bookings/my-bookings');\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error fetching bookings:', error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch bookings. Please try again later.');\n  }\n};\nexport const createBooking = async bookingData => {\n  try {\n    console.log('Creating booking with data:', bookingData); // Debug log\n    const response = await api.post('/api/bookings', {\n      tourId: parseInt(bookingData.tourId),\n      // Ensure tourId is a number\n      bookingDate: bookingData.bookingDate,\n      numberOfPeople: parseInt(bookingData.travelersCount),\n      // Match backend field name\n      specialRequirements: bookingData.specialRequirements || ''\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error creating booking:', error);\n    if (error.response) {\n      console.error('Server response:', error.response.data); // Debug log\n    }\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to create booking. Please try again.');\n  }\n};\nexport const cancelBooking = async bookingId => {\n  try {\n    const response = await api.delete(`/api/bookings/${bookingId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Error canceling booking:', error);\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to cancel booking. Please try again.');\n  }\n};","map":{"version":3,"names":["api","getBookings","response","get","data","error","_error$response","_error$response$data","console","Error","message","createBooking","bookingData","log","post","tourId","parseInt","bookingDate","numberOfPeople","travelersCount","specialRequirements","_error$response2","_error$response2$data","cancelBooking","bookingId","delete","_error$response3","_error$response3$data"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/services/bookingService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const getBookings = async () => {\r\n  try {\r\n    const response = await api.get('/api/bookings/my-bookings');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching bookings:', error);\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch bookings. Please try again later.');\r\n  }\r\n};\r\n\r\nexport const createBooking = async (bookingData) => {\r\n  try {\r\n    console.log('Creating booking with data:', bookingData); // Debug log\r\n    const response = await api.post('/api/bookings', {\r\n      tourId: parseInt(bookingData.tourId), // Ensure tourId is a number\r\n      bookingDate: bookingData.bookingDate,\r\n      numberOfPeople: parseInt(bookingData.travelersCount), // Match backend field name\r\n      specialRequirements: bookingData.specialRequirements || ''\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating booking:', error);\r\n    if (error.response) {\r\n      console.error('Server response:', error.response.data); // Debug log\r\n    }\r\n    throw new Error(error.response?.data?.message || 'Failed to create booking. Please try again.');\r\n  }\r\n};\r\n\r\nexport const cancelBooking = async (bookingId) => {\r\n  try {\r\n    const response = await api.delete(`/api/bookings/${bookingId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error canceling booking:', error);\r\n    throw new Error(error.response?.data?.message || 'Failed to cancel booking. Please try again.');\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,2BAA2B,CAAC;IAC3D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAM,IAAII,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,mDAAmD,CAAC;EACvG;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACFJ,OAAO,CAACK,GAAG,CAAC,6BAA6B,EAAED,WAAW,CAAC,CAAC,CAAC;IACzD,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACc,IAAI,CAAC,eAAe,EAAE;MAC/CC,MAAM,EAAEC,QAAQ,CAACJ,WAAW,CAACG,MAAM,CAAC;MAAE;MACtCE,WAAW,EAAEL,WAAW,CAACK,WAAW;MACpCC,cAAc,EAAEF,QAAQ,CAACJ,WAAW,CAACO,cAAc,CAAC;MAAE;MACtDC,mBAAmB,EAAER,WAAW,CAACQ,mBAAmB,IAAI;IAC1D,CAAC,CAAC;IACF,OAAOlB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAgB,gBAAA,EAAAC,qBAAA;IACdd,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,IAAIA,KAAK,CAACH,QAAQ,EAAE;MAClBM,OAAO,CAACH,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC1D;IACA,MAAM,IAAIK,KAAK,CAAC,EAAAY,gBAAA,GAAAhB,KAAK,CAACH,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjB,IAAI,cAAAkB,qBAAA,uBAApBA,qBAAA,CAAsBZ,OAAO,KAAI,6CAA6C,CAAC;EACjG;AACF,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,IAAI;IACF,MAAMtB,QAAQ,GAAG,MAAMF,GAAG,CAACyB,MAAM,CAAC,iBAAiBD,SAAS,EAAE,CAAC;IAC/D,OAAOtB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAqB,gBAAA,EAAAC,qBAAA;IACdnB,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAM,IAAII,KAAK,CAAC,EAAAiB,gBAAA,GAAArB,KAAK,CAACH,QAAQ,cAAAwB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtB,IAAI,cAAAuB,qBAAA,uBAApBA,qBAAA,CAAsBjB,OAAO,KAAI,6CAA6C,CAAC;EACjG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}