{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080'; // Base URL for Spring Boot backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Set to false since we're using token-based auth\n});\n\n// Add request interceptor\napi.interceptors.request.use(config => {\n  // Add debug logging\n  console.log('Making request to:', config.url);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Token found and added to request');\n  } else {\n    console.log('No token found in localStorage');\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor\napi.interceptors.response.use(response => {\n  // Add debug logging\n  console.log('Received successful response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  let errorMessage = 'An unexpected error occurred';\n  if (error.response) {\n    var _error$response$data;\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.response.data || errorMessage;\n    console.error('Server Error:', {\n      url: error.config.url,\n      status: error.response.status,\n      data: error.response.data\n    });\n\n    // Handle 401 Unauthorized\n    if (error.response.status === 401) {\n      localStorage.removeItem('token'); // Clear invalid token\n      window.location.href = '/login'; // Redirect to login\n      return Promise.reject(new Error('Session expired. Please login again.'));\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    errorMessage = 'No response from server. Please check if the server is running.';\n    console.error('Network Error:', error.request);\n  } else {\n    // Something happened in setting up the request\n    errorMessage = error.message;\n    console.error('Request Error:', error.message);\n  }\n  error.message = errorMessage;\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","console","log","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","errorMessage","_error$response$data","message","removeItem","window","location","href","Error"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080'; // Base URL for Spring Boot backend\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Set to false since we're using token-based auth\n});\n\n// Add request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add debug logging\n    console.log('Making request to:', config.url);\n    \n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('Token found and added to request');\n    } else {\n      console.log('No token found in localStorage');\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('Request interceptor error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor\napi.interceptors.response.use(\n  (response) => {\n    // Add debug logging\n    console.log('Received successful response:', {\n      url: response.config.url,\n      status: response.status,\n      data: response.data\n    });\n    return response;\n  },\n  (error) => {\n    let errorMessage = 'An unexpected error occurred';\n    \n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      errorMessage = error.response.data?.message || error.response.data || errorMessage;\n      console.error('Server Error:', {\n        url: error.config.url,\n        status: error.response.status,\n        data: error.response.data\n      });\n      \n      // Handle 401 Unauthorized\n      if (error.response.status === 401) {\n        localStorage.removeItem('token'); // Clear invalid token\n        window.location.href = '/login'; // Redirect to login\n        return Promise.reject(new Error('Session expired. Please login again.'));\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      errorMessage = 'No response from server. Please check if the server is running.';\n      console.error('Network Error:', error.request);\n    } else {\n      // Something happened in setting up the request\n      errorMessage = error.message;\n      console.error('Request Error:', error.message);\n    }\n\n    error.message = errorMessage;\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}