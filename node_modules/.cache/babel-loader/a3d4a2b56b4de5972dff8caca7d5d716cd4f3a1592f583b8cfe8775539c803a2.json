{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{useAuth}from'../../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{allowedRoles,children}=_ref;const{user}=useAuth();if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(allowedRoles&&!allowedRoles.some(role=>user.roles.includes(role))){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return children?children:/*#__PURE__*/_jsx(Outlet,{});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsx","_jsx","ProtectedRoute","_ref","allowedRoles","children","user","to","replace","some","role","roles","includes"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/components/Common/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ allowedRoles, children }) => {\r\n  const { user } = useAuth();\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  if (allowedRoles && !allowedRoles.some(role => user.roles.includes(role))) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,OAAO,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,YAAY,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAChD,KAAM,CAAEG,IAAK,CAAC,CAAGP,OAAO,CAAC,CAAC,CAE1B,GAAI,CAACO,IAAI,CAAE,CACT,mBAAOL,IAAA,CAACJ,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIJ,YAAY,EAAI,CAACA,YAAY,CAACK,IAAI,CAACC,IAAI,EAAIJ,IAAI,CAACK,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAE,CACzE,mBAAOT,IAAA,CAACJ,QAAQ,EAACU,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,MAAO,CAAAH,QAAQ,CAAGA,QAAQ,cAAGJ,IAAA,CAACH,MAAM,GAAE,CAAC,CACzC,CAAC,CAED,cAAe,CAAAI,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}