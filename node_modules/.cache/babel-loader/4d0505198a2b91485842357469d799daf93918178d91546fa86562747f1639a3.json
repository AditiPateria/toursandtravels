{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const login = async credentials => {\n  try {\n    // Using JSONPlaceholder's users endpoint for testing\n    const response = await api.get('/users/1');\n    const mockToken = btoa(JSON.stringify({\n      username: credentials.username\n    }));\n    return {\n      token: mockToken,\n      id: 1,\n      username: credentials.username,\n      email: response.data.email,\n      roles: ['ROLE_USER']\n    };\n  } catch (error) {\n    throw new Error('Login failed. Please try again.');\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const register = async userData => {\n  try {\n    // Using JSONPlaceholder's posts endpoint for testing\n    const response = await api.post('/posts', {\n      title: 'Registration',\n      body: JSON.stringify(userData),\n      userId: 1\n    });\n    if (response.status === 201) {\n      const mockToken = btoa(JSON.stringify({\n        username: userData.username\n      }));\n      return {\n        token: mockToken,\n        id: response.data.id,\n        username: userData.username,\n        email: userData.email,\n        roles: [userData.role || 'ROLE_USER']\n      };\n    }\n    throw new Error('Registration failed');\n  } catch (error) {\n    throw new Error('Registration failed. Please try again.');\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","headers","login","credentials","response","get","mockToken","btoa","JSON","stringify","username","token","id","email","data","roles","error","Error","logout","localStorage","removeItem","register","userData","post","title","body","userId","status","role"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport const login = async (credentials) => {\r\n  try {\r\n    // Using JSONPlaceholder's users endpoint for testing\r\n    const response = await api.get('/users/1');\r\n    const mockToken = btoa(JSON.stringify({ username: credentials.username }));\r\n    return {\r\n      token: mockToken,\r\n      id: 1,\r\n      username: credentials.username,\r\n      email: response.data.email,\r\n      roles: ['ROLE_USER']\r\n    };\r\n  } catch (error) {\r\n    throw new Error('Login failed. Please try again.');\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    // Using JSONPlaceholder's posts endpoint for testing\r\n    const response = await api.post('/posts', {\r\n      title: 'Registration',\r\n      body: JSON.stringify(userData),\r\n      userId: 1\r\n    });\r\n\r\n    if (response.status === 201) {\r\n      const mockToken = btoa(JSON.stringify({ username: userData.username }));\r\n      return {\r\n        token: mockToken,\r\n        id: response.data.id,\r\n        username: userData.username,\r\n        email: userData.email,\r\n        roles: [userData.role || 'ROLE_USER']\r\n      };\r\n    }\r\n    throw new Error('Registration failed');\r\n  } catch (error) {\r\n    throw new Error('Registration failed. Please try again.');\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,sCAAsC;EAC/CC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,UAAU,CAAC;IAC1C,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,QAAQ,EAAEP,WAAW,CAACO;IAAS,CAAC,CAAC,CAAC;IAC1E,OAAO;MACLC,KAAK,EAAEL,SAAS;MAChBM,EAAE,EAAE,CAAC;MACLF,QAAQ,EAAEP,WAAW,CAACO,QAAQ;MAC9BG,KAAK,EAAET,QAAQ,CAACU,IAAI,CAACD,KAAK;MAC1BE,KAAK,EAAE,CAAC,WAAW;IACrB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF;IACA,MAAMlB,QAAQ,GAAG,MAAMN,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAE;MACxCC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAEjB,IAAI,CAACC,SAAS,CAACa,QAAQ,CAAC;MAC9BI,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAItB,QAAQ,CAACuB,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMrB,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAEY,QAAQ,CAACZ;MAAS,CAAC,CAAC,CAAC;MACvE,OAAO;QACLC,KAAK,EAAEL,SAAS;QAChBM,EAAE,EAAER,QAAQ,CAACU,IAAI,CAACF,EAAE;QACpBF,QAAQ,EAAEY,QAAQ,CAACZ,QAAQ;QAC3BG,KAAK,EAAES,QAAQ,CAACT,KAAK;QACrBE,KAAK,EAAE,CAACO,QAAQ,CAACM,IAAI,IAAI,WAAW;MACtC,CAAC;IACH;IACA,MAAM,IAAIX,KAAK,CAAC,qBAAqB,CAAC;EACxC,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EAC3D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}