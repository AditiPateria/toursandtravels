{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jwtDecode}from'jwt-decode';import{login as authLogin,logout as authLogout,register}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');if(token){try{const decoded=jwtDecode(token);setUser({id:decoded.id,username:decoded.username,email:decoded.email,roles:decoded.roles});}catch(error){console.error('Invalid token',error);localStorage.removeItem('token');}}setLoading(false);},[]);const login=async credentials=>{// Mock successful login\nconst mockResponse={token:'mock-token-'+Date.now(),id:1,username:credentials.username,email:'user@example.com',roles:['ROLE_USER']};localStorage.setItem('token',mockResponse.token);setUser({id:mockResponse.id,username:mockResponse.username,email:mockResponse.email,roles:mockResponse.roles});return mockResponse;};const signup=async userData=>{// Mock successful registration\nconst mockResponse={token:'mock-token-'+Date.now(),id:1,username:userData.username,email:userData.email,roles:[userData.role||'ROLE_USER']};return mockResponse;};const logout=()=>{localStorage.removeItem('token');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,login,logout,signup},children:children});};export const useAuth=()=>React.useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","login","authLogin","logout","authLogout","register","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","decoded","id","username","email","roles","error","console","removeItem","credentials","mockResponse","Date","now","setItem","signup","userData","role","Provider","value","useAuth","useContext"],"sources":["C:/Users/Aditi/Desktop/travel-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { login as authLogin, logout as authLogout, register } from '../services/authService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setUser({\r\n          id: decoded.id,\r\n          username: decoded.username,\r\n          email: decoded.email,\r\n          roles: decoded.roles\r\n        });\r\n      } catch (error) {\r\n        console.error('Invalid token', error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    // Mock successful login\r\n    const mockResponse = {\r\n      token: 'mock-token-' + Date.now(),\r\n      id: 1,\r\n      username: credentials.username,\r\n      email: 'user@example.com',\r\n      roles: ['ROLE_USER']\r\n    };\r\n    \r\n    localStorage.setItem('token', mockResponse.token);\r\n    setUser({\r\n      id: mockResponse.id,\r\n      username: mockResponse.username,\r\n      email: mockResponse.email,\r\n      roles: mockResponse.roles\r\n    });\r\n    return mockResponse;\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    // Mock successful registration\r\n    const mockResponse = {\r\n      token: 'mock-token-' + Date.now(),\r\n      id: 1,\r\n      username: userData.username,\r\n      email: userData.email,\r\n      roles: [userData.role || 'ROLE_USER']\r\n    };\r\n    return mockResponse;\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout, signup }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => React.useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}